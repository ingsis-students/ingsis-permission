plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.jlleitschuh.gradle.ktlint" version '10.2.1'
    id 'org.jetbrains.kotlinx.kover' version '0.8.2'
    id 'maven-publish'
}

group = 'com.students'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.postgresql:postgresql'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //jpa annotations. '@Entity'
    implementation 'com.h2database:h2:2.2.224'

    implementation 'org.springframework.boot:spring-boot-starter-security' //apply role based security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose' // JWT decoding and validation
    testImplementation 'org.springframework.security:spring-security-test'

}

kotlin {
    jvmToolchain(21)
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

kover {
    useJacoco()
    reports {
        verify {
            rule {
                minBound(73)
            }
        }
    }
}

ktlint {
    disabledRules = ["import-ordering"]
}


tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            def packageName = project.findProperty('package') ?: System.getenv('PACKAGE_NAME') ?: project.name
            url = uri("https://maven.pkg.github.com/ingsis-students/" + packageName)
            credentials {
                username = project.findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}